package uli.nick.job4j.praxis.tasks131lislarraylist;

import java.util.List;

/**
 * <p>0.8. Удаление одного списка из другого
 * <p>Рассмотрим методы, которые позволяют удалять целые наборы данных из списка. Для этого можно
 * использовать методы removeAll() и retainAll(). Зачем сразу 2 метода, спросите Вы. Ответ простой - для того
 * чтобы определить разное поведение при удалении. Подробнее:
 * <p>boolean removeAll (Collection<?> col) - метод удаляет из списка все элементы, которые содержатся в коллекции
 * col, если в результате работы метода исходный список изменился - метод возвращает true.
 * <p>boolean retainAll (Collection<?> col) - метод также удаляет элементы из списка, за исключением тех, которые
 * находятся в коллекции col, если в результате работы метода исходный список изменился - метод возвращает true.
 * <p>Задание: метод принимает 3 списка элементов:
 * <p>1. Общий список элементов;
 * <p>2. Список важных элементов, но не обязательных;
 * <p>3. Список элементов, которые обязательно должны отсутствовать в результирующем списке.
 * <p>Необходимо реализовать метод, который вернет список, основой которого будет первый, присутствовать
 * элементы из второго и точно отсутствовать элементы из третьего. Используйте методы о которых говорилось выше.
 */

public class SplitterList {
    public static List<String> split(List<String> left, List<String> middle, List<String> right) {
        left.retainAll(middle);
        left.removeAll(right);
        return left;
    }
}

// Каркас 0.8.:
//import java.util.List;
//
//public class SplitterList {
//    public static List<String> split(List<String> left, List<String> middle, List<String> right) {
//        return left;
//    }
//}
//.
