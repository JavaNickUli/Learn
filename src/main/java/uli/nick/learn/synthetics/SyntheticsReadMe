До Java 11 версии!!!

Синтетические конструкции Java - код, введенный компилятором для прозрачной обработки доступа к элементам,
которые в противном случае были бы недоступны из-за недостаточной видимости или отсутствующих ссылок.

Любые конструкции, введенные компилятором Java, которые не имеют соответствующей конструкции в исходном коде,
должны быть помечены как синтетические, за исключением конструкторов по умолчанию, метода инициализации класса,
а также значений и методов valueOf класса Enum.

Существуют различные типы конструкций компиляции, а именно поля, конструкторы и методы. С другой стороны,
хотя вложенные классы могут быть изменены компилятором (т.е. анонимные классы), они не считаются синтетическими.

Поля. SyntheticFieldDemoTest
При компиляции любой внутренний класс будет содержать синтетическое поле , которое ссылается на класс верхнего
уровня. По совпадению, именно это позволяет получить доступ к заключающим членам класса из вложенного класса.

Чтобы убедиться, что это именно то, что происходит, реализуется тест, который получает вложенные поля класса
путем отражения и проверки их с помощью метода isSynthetic().

Другой способ проверить это - запустить дизассемблер с помощью команды javap. В любом случае вывод показывает
синтетическое поле с именем this$0.

Методы. SyntheticFieldDemoTest
Компиляция создаёт методы доступа к переменной. Без сеттеров и геттеров было бы невозможно получить доступ к
закрытому полю из заключающего экземпляра.

Можно проверить это с помощью той же техники, которая показывает синтетические методы access$0, access$1...